#include <SPI.h>
#include <RH_NRF24.h>

#include <LiquidCrystal.h>                //include LCD library
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);      //Define LCD pins

RH_NRF24 nrf24;

void setup() 
{
  Serial.begin(9600);
  while (!Serial) 
    ; // wait for serial port to connect. Needed for Leonardo only
  if (!nrf24.init())
    Serial.println("init failed");
  // Defaults after init are 2.402 GHz (channel 2), 2Mbps, 0dBm
  if (!nrf24.setChannel(1))
    Serial.println("setChannel failed");
  if (!nrf24.setRF(RH_NRF24::DataRate2Mbps, RH_NRF24::TransmitPower0dBm))
    Serial.println("setRF failed");    

  lcd.begin(16, 2);                 //LCD Begin
  lcd.setCursor(0, 0);              //Set cursor to top row
  lcd.print("Count = ");            //Print String
}

void loop()
{
  if (nrf24.available())
  {
    // Should be a message for us now   
    uint8_t buf[RH_NRF24_MAX_MESSAGE_LEN];
    uint8_t len = sizeof(buf);
    if (nrf24.recv(buf, &len))
    {
      //NRF24::printBuffer("request: ", buf, len);
      Serial.print("got request: ");
      Serial.print(buf[1]);
      Serial.println((char*)buf);
      
      lcd.setCursor(0, 1);                    //Set cursor to bottom row
      lcd.print(buf[1]);                      //Print Count value
      lcd.print(" spaces  ");  
        
      // Send a reply
      uint8_t data[] = "Received";
      nrf24.send(data, sizeof(data));
      nrf24.waitPacketSent();
      Serial.println("Sent a reply");
      
    }
    else
    {
      Serial.println("recv failed");
    }
  }
}
